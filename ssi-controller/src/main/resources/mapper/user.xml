<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"   
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!-- sqlMap：映射标签
	namespace：命名空间
 -->
<sqlMap namespace="user">

	<!-- 为类起别名，使用的时候比较方便 -->
	<typeAlias alias="user" type="com.jk.entity.user.User"/>
	
	<typeAlias alias="userResponse" type="com.jk.entity.user.UserResponse"/>
	<typeAlias alias="userRequest" type="com.jk.entity.user.UserRequest"/>
	
	<typeAlias alias="role" type="com.jk.entity.role.Role"/>
	<typeAlias alias="roleResponse" type="com.jk.entity.role.RoleResponse"/>
	<typeAlias alias="menuRequest" type="com.jk.entity.menu.MenuRequest"/>
	<typeAlias alias="menuResponse" type="com.jk.entity.menu.MenuResponse"/>
	
	<!-- 查询用户权限列表 -->
	<select id="selectUserMenuListJson" parameterClass="menuRequest" resultClass="menuResponse">
		select distinct m.t_id as "id", 
	      m.t_name as "name", 
	      m.t_url as "url", 
	      m.t_pid as "pid", 
	      m.t_type as "type", 
	      nvl2(m1.t_role_id, 1, 0) as "checked",
	      m.t_parent as "isParent" 
	    from t_menus m
	    right join (select m2.t_role_id, m2.t_menu_id from t_r_m_mid m2) m1
	    on m.t_id = m1.t_menu_id
	    right join (select t_role_id from t_u_r_midss where t_user_id = #userID#) m3
	    on m1.t_role_id = m3.t_role_id
	    order by m.t_id
	</select>
	
	<resultMap class="com.jk.entity.user.UserResponse" id="userResponseMap">
		
		<result property="userID" column="t_userId"/>
		<result property="userName" column="t_userName"/>
		<result property="userPwd" column="t_passWord"/>
	</resultMap>
		
		<!-- 查询用户数量 -->
	<select id="selectUserCount"  parameterClass="userRequest" resultClass="int">
		select count(1)
		from t_userss
	</select>

		<!-- 删除用户所有的角色 -->
	<delete id="deleteAllRolesByUserID">
		delete from t_u_r_midss
		where t_user_id = #userID#
	</delete>
	
	<!-- 添加用户的角色 -->
	<insert id="insertUserRole">
		insert into t_u_r_midss
		(t_id, t_user_id, t_role_id)
		values
		(t_u_r_mid_seq.nextval, #userID#, #roleID#)
	</insert>

	<!-- 查询用户角色列表 -->
	<select id="selectUserRoleListJson" resultClass="roleResponse">
		select r.t_roleId as "id", 
			r.t_roleName as "name", 
			NVL2(m1.t_role_id, 1, 0) as "checked" 
		from t_roless r
		left join (select m.t_role_id from t_u_r_midss m where m.t_user_id = #userID#) m1
		on r.t_roleId = m1.t_role_id
		order by r.t_roleId
	</select>

	<!-- 添加用户 -->
	<insert id="insertUser" parameterClass="user">
		insert into t_userss
		(t_userId,t_userName,t_passWord)
		values
		(t_user_seq.nextval,#userName#,#userPwd#)
	</insert>
	
	<!-- 查询用户列表 -->
	<select id="selectUserList" parameterClass="userRequest" resultMap="userResponseMap">

		select u2.* from (
			select u1.*, rownum as rm from (
				select t_userId,
					t_userName,
					t_passWord
				from t_userss u
			) u1
			where rownum <![CDATA[<=]]> #endPos#
		) u2
		where u2.rm >= #startPos#
	</select>
	
	
	<!-- 用户登录列表 -->
	<select id="Login" resultClass="userResponse">
		select t_userId as userID, 
			t_userName as userName,
			t_passWord as userPwd,
			t_login_fail_num as loginFailNum,
			(sysdate - t_login_fail_date) * 24 * 60 * 60 * 1000 as "loginFailDate"
		from t_userss  where t_userName=#userName#
	</select>
	
	<!-- 修改用户登录次数 -->
	<update id="updateLoginFailDate" >
	update t_userss
		set t_login_fail_num = #loginFailNum#,
		t_login_fail_date = sysdate
		where t_userName = #userName#
	</update>
</sqlMap>